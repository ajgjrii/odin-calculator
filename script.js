// Event listener for numeric and operator keypresses; second one is for "enter" key
document.addEventListener("keydown", displayCalc );
document.addEventListener("keydown", calculating );

// Event listener for the on screen numberpad to assign 0-9 their numeric values and pass 
// through function called "numberPad"
var numberpad = document.getElementById("numberpad");
numberpad.addEventListener("click", function(e) {
  if (e.target && e.target.nodeName == "BUTTON") {
    var num = e.target.innerHTML;
    numberPad (num);
  }
});

// Event listener for the CE button; calls a function to clear "input" display
var clearEverything = document.getElementById("btnclear");
clearEverything.addEventListener("click", () => {
  var numOps = document.getElementById("input");
  numOps.textContent = "";
})

// Created keyboard events for operators and equals buttons
const enterKeyEvent = new KeyboardEvent('keydown', {
  key: 'Enter',
  code: 'Enter',
  keyCode: 13,
  which: 13,
  bubbles: true,
});

const multiplyKeyEvent = new KeyboardEvent('keydown', {
  key: '*',
  code: 'NumpadMultiply',
  keyCode: 106,
  which: 106,
  bubbles: true,
});

const dotKeyEvent = new KeyboardEvent('keydown', {
  key: '.',
  code: 'Period',
  keyCode: 190,
  which: 190,
  bubbles: true,
});

const divideKeyEvent = new KeyboardEvent('keydown', {
  key: '/',
  code: 'Slash',
  keyCode: 111,
  which: 111,
  bubbles: true,
});

const minusKeyEvent = new KeyboardEvent('keydown', {
  key: '-',
  code: 'Minus',
  keyCode: 109,
  which: 109,
  bubbles: true,
});

const plusKeyEvent = new KeyboardEvent('keydown', {
  key: '+',
  code: 'Plus',
  keyCode: 107,
  which: 107,
  bubbles: true,
});

// simulates key presses by calling events
var equals = document.getElementById("btnenter");
equals.addEventListener("click", () => {
  document.dispatchEvent(enterKeyEvent);
});

var multiply = document.getElementById("btnmultiply");
multiply.addEventListener("click", () => {
  document.dispatchEvent(multiplyKeyEvent);
});

var dot = document.getElementById("btndecimal");
dot.addEventListener("click", () => {
  document.dispatchEvent(dotKeyEvent);
});

var divide = document.getElementById("btndivide");
divide.addEventListener("click", () => {
  document.dispatchEvent(divideKeyEvent);
});

var minus = document.getElementById("btnminus");
minus.addEventListener("click", () => {
  document.dispatchEvent(minusKeyEvent);
});

var plus = document.getElementById("btnplus");
plus.addEventListener("click", () => {
  document.dispatchEvent(plusKeyEvent);
});



// This function controls what will be shown on the calculator's display
function displayCalc (event) {
  // This block will execute if 0-9, decimal, or operators are pressed
  if (/[0-9+\-*/.]/.test(event.key)) {
    // valid keystrokes are written to "input" display and stored in variable "entry";
    // variables "entry" and "operator" will be used for 
    var numOps = document.getElementById("input");
    numOps.textContent += event.key;
    entry = numOps.textContent;
    // This block will only execute if an operator is used
    if (/[+\-*/]/.test(event.key)) {
      operator = event.key;
    };
  };
};

// This block will execute if the "enter key is pressed"
function calculating (event) {
  if (event.key === 'Enter') {
    // numOps and output need to be called since they will be both be interacted with
    var numOps = document.getElementById("input");
    var output = document.getElementById("output");
    // "splitString" called and outputs passed through "calculator"; "calculator" outputs
    // are then written to the display "output" and the display "input" is cleared
    splitString(entry, operator);
    output.textContent = calculator(calculation.num1, calculation.num2, calculation.delim);
    numOps.textContent = "";
  };
};

// This function will take the input and split it into two numbers, and a delimiter
function splitString(str, delimiter) {
  // Split the string into an array of numbers
  const nums = str.split(delimiter).map(Number);
  const [num1, num2] = nums;
  const delim = delimiter;

  // stores variables as an object and returns the object
  calculation = { num1, num2, delim };
  return calculation;
};

// Takes values generated by splitString function and runs operations. Returns "Error" when operations incorrectly used
function calculator (a, b, operation) {
  if (a != a || b != b) {
    return "ERROR";
  } else if (operation === "+") {
    return a + b;
  } else if (operation === "-") {
    return a - b;
  } else if (operation === "*") {
    return a * b;
  } else if (operation === "/") {
    return a / b;
  } else {
    return "ERROR"
  }
};

// This function allows keypad numbers to simulate keyboard entries (works for 0-9 only)
function numberPad (key) {
  var keyboardEvent = new KeyboardEvent("keydown", {
    bubbles: true,
    cancelable: true,
    key: key,
    shiftKey: false
  });
  document.dispatchEvent(keyboardEvent);
}
